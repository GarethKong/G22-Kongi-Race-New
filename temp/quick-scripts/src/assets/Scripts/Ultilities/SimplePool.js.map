{"version":3,"sources":["assets/Scripts/Ultilities/SimplePool.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;AAE5E,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAA;QAEY,aAAQ,GAAkC,EAAE,CAAA;QAC5C,eAAU,GAAgC,EAAE,CAAA;IAqExD,CAAC;mBAxEoB,UAAU;IAM3B,sBAAkB,sBAAQ;aAA1B;YAEI,IAAI,IAAI,CAAC,QAAQ,EACjB;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;aACxB;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAU,EAAE,CAAC;YACjC,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;;;OAAA;IAEM,0BAAK,GAAZ,UAAa,MAAiB,EAAE,MAAe;QAE3C,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;QAC/B,IAAI,IAAa,CAAC;QAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,EACtC;YACI,UAAU;YACV,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EACnB;gBACI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAG,CAAC;aACtB;iBAED;gBACI,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aACjC;SACJ;aACD;YACI,cAAc;YACd,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;YAE3B,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SAEjC;QACD,yBAAyB;QACzB,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,4BAAO,GAAd,UAAe,IAAa;QAExB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,EACtC;YACI,UAAU;YACV,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC9B;aACD;YACI,cAAc;YACd,IAAI,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SAC9B;QACD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnB,CAAC;IAEM,8BAAS,GAAhB,UAAiB,IAAY;QAEzB,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,EACtC;YACI,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;IACL,CAAC;;IAvEgB,UAAU;QAD9B,OAAO;OACa,UAAU,CAwE9B;IAAD,iBAAC;CAxED,AAwEC,IAAA;kBAxEoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class SimplePool\n{\n    private dictPool: {[name: string]: cc.NodePool} = {}\n    private dictPrefab: {[name: string]: cc.Prefab} = {}\n    private static Instance: SimplePool;\n\n    public static get instance()\n    {\n        if (this.Instance)\n        {\n            return this.Instance;\n        }\n\n        this.Instance = new SimplePool();\n        return this.Instance;\n    }\n\n    public Spawn(prefab: cc.Prefab, parent: cc.Node)\n    {\n        let name = prefab.data.name;\n        this.dictPrefab[name] = prefab;\n        let node: cc.Node;\n        if (this.dictPool.hasOwnProperty(name))\n        {\n            //已有对应的对象池\n            let pool = this.dictPool[name];\n            if (pool.size() > 0)\n            {\n                node = pool.get()!;\n            }\n            else\n            {\n                node = cc.instantiate(prefab);\n            }\n        } else\n        {\n            //没有对应对象池，创建他！\n            let pool = new cc.NodePool();\n            this.dictPool[name] = pool;\n\n            node = cc.instantiate(prefab);\n\n        }\n        // parent.addChild(node);\n        return node;\n    }\n\n    public Despawn(node: cc.Node)\n    {\n        let name = node.name;\n        let pool = null;\n        if (this.dictPool.hasOwnProperty(name))\n        {\n            //已有对应的对象池\n            pool = this.dictPool[name];\n        } else\n        {\n            //没有对应对象池，创建他！\n            pool = new cc.NodePool();\n            this.dictPool[name] = pool;\n        }\n        pool.put(node);\n    }\n\n    public ClearPool(name: string)\n    {\n        if (this.dictPool.hasOwnProperty(name))\n        {\n            let pool = this.dictPool[name];\n            pool.clear();\n        }\n    }\n}"]}