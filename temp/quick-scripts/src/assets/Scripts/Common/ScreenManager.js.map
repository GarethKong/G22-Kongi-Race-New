{"version":3,"sources":["assets/Scripts/Common/ScreenManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iDAA4C;AAC5C,IAAO,QAAQ,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;AACzC,IAAO,OAAO,GAAG,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC;AAEvC,IAAM,aAAa,GAAG;IAClB,SAAS,EAAE,CAAC;IACZ,UAAU,EAAE,CAAC;IACb,SAAS,EAAE,CAAC;IACZ,SAAS,EAAE,CAAC;IACZ,UAAU,EAAE,CAAC;CAChB,CAAC;AAEW,QAAA,YAAY,GAAG;IACxB,MAAM,EAAE,CAAC;IACT,MAAM,EAAE,CAAC;CACZ,CAAC;AAGF;IAA2C,iCAAY;IAAvD;QAAA,qEAsCC;QApCG,YAAM,GAAY,IAAI,CAAC;QAGvB,oBAAc,GAAgB,EAAE,CAAC;QAGjC,gBAAU,GAAc,EAAE,CAAC;;IA8B/B,CAAC;sBAtCoB,aAAa;IAY9B,sBAAW,yBAAQ;aAAnB;YACI,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,eAAa,CAAC;QAC1C,CAAC;;;OAAA;IAED,8BAAM,GAAN;QACI,eAAa,CAAC,IAAI,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,6BAAK,GAAL;QACI,eAAa,CAAC,QAAQ,CAAC,kBAAkB,CAAC,oBAAY,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC;IAED,0CAAkB,GAAlB,UAAmB,IAAY;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,oBAAY,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvD,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACrC,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC;SAClC;IACL,CAAC;IAGD,uCAAe,GAAf,UAAgB,IAAY;QACxB,yDAAyD;QACzD,IAAI,CAAC,GAAG,aAAa,CAAC,IAAI,CAAC,CAAA;QAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACpC,uBAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACxD,CAAC;;IAnCD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iDACK;IAGvB;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;yDACa;IAGjC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;qDACS;IARV,aAAa;QADjC,OAAO;OACa,aAAa,CAsCjC;IAAD,oBAAC;CAtCD,AAsCC,CAtC0C,EAAE,CAAC,SAAS,GAsCtD;kBAtCoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["import DialogManager from \"./DialogManager\";\nimport property = cc._decorator.property;\nimport ccclass = cc._decorator.ccclass;\n\nconst DlgNameConfig = {\n    \"Setting\": 0,\n    \"Setting2\": 1,\n    \"LoseDlg\": 2,\n    \"Summary\": 3,\n    \"Complete\": 4\n};\n\nexport const ScreenConfig = {\n    \"Game\": 0,\n    \"Home\": 1,\n};\n\n@ccclass\nexport default class ScreenManager extends cc.Component {\n    @property(cc.Node)\n    uiRoot: cc.Node = null;\n\n    @property(cc.Prefab)\n    dlgPrefabsList: cc.Prefab[] = [];\n\n    @property(cc.Node)\n    screenList: cc.Node[] = [];\n\n    static _ins: ScreenManager;\n\n    static get instance(): ScreenManager {\n        return this._ins || new ScreenManager;\n    }\n\n    onLoad() {\n        ScreenManager._ins = this;\n    }\n\n    start() {\n        ScreenManager.instance.onShowScreenByName(ScreenConfig.Home);\n    }\n\n    onShowScreenByName(name: number) {\n        for (let i = 0; i < Object.keys(ScreenConfig).length; i++) {\n            let currentNode = this.screenList[i];\n            currentNode.active = i == name;\n        }\n    }\n\n\n    onShowDlgByName(name: string): void {\n        // Common.playAudioEffect(AudioEffectID.ClickBtn, false);\n        let a = DlgNameConfig[name]\n        let prefab = this.dlgPrefabsList[a];\n        DialogManager.instance.showDlg(prefab, this.uiRoot);\n    }\n}"]}