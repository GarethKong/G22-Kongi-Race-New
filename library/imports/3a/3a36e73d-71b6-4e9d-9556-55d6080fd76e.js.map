{"version":3,"sources":["assets/Scripts/Ultilities/NumberUltilities.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;AAE5E,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAA;IAwCA,CAAC;IAtCG;;OAEG;IACW,8BAAa,GAA3B;QAEI,OAAO,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC;IACD;;;;;OAKG;IACW,mCAAkB,GAAhC,UAAiC,QAAgB,EAAE,QAAgB;QAE/D,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC;IACxE,CAAC;IAED;;;;;OAKG;IACW,qCAAoB,GAAlC,UAAmC,QAAgB,EAAE,QAAgB;QAEjE,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC;IAC5D,CAAC;IAEa,6BAAY,GAA1B,UAA2B,UAAoB,EAAE,QAAkB,EAAE,SAAiB;QAElF,OAAO,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,EAC7D,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,EACjD,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,EACjD,GAAG,CACN,CAAC;IACN,CAAC;IAtCgB,gBAAgB;QADpC,OAAO;OACa,gBAAgB,CAwCpC;IAAD,uBAAC;CAxCD,AAwCC,IAAA;kBAxCoB,gBAAgB","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class NumberUltilities\n{\n    /**\n     * Random dấu, trả về 1 (cho dương) và -1 (cho âm)\n     */\n    public static GetRandomSign(): number\n    {\n        return Math.random() >= 0.5 ? 1 : -1;\n    }\n    /**\n     * Lấy giá trị random INTEGER ở trong khoảng (BAO GỒM) MIN và (KO BAO GỒM) MAX\n     * @param minValue Giá trị tối thiểu, NẰM TRONG giá trị trả về\n     * @param maxValue Giá trị tối đa, KO NẰM TRONG giá trị trả về\n     * @returns \n     */\n    public static GetRandomIntNumber(minValue: number, maxValue: number): number\n    {\n        return Math.floor(Math.random() * (maxValue - minValue)) + minValue;\n    }\n\n    /**\n     * Lấy giá trị random ở trong khoảng (BAO GỒM) MIN và (KO BAO GỒM) MAX\n     * @param minValue Giá trị tối thiểu, NẰM TRONG giá trị trả về\n     * @param maxValue Giá trị tối đa, KO NẰM TRONG giá trị trả về\n     * @returns \n     */\n    public static GetRandomFloatNumber(minValue: number, maxValue: number): number\n    {\n        return Math.random() * (maxValue - minValue) + minValue;\n    }\n\n    public static GetLerpColor(startColor: cc.Color, endColor: cc.Color, lerpValue: number): cc.Color\n    {\n        return cc.color(cc.misc.lerp(startColor.r, endColor.r, lerpValue),\n            cc.misc.lerp(startColor.g, endColor.g, lerpValue),\n            cc.misc.lerp(startColor.b, endColor.b, lerpValue),\n            255\n        );\n    }\n\n}\n"]}