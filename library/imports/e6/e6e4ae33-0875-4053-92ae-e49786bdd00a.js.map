{"version":3,"sources":["assets/Scripts/Common/DatabaseManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import GameState from \"./GameState\";\nimport ccclass = cc._decorator.ccclass;\n\n@ccclass\nexport default class DatabaseManager extends cc.Component {\n\n    static lastScore = 0;\n    static bestScore = 0;\n    static totalCoin = 0;\n    static numberPlayed = 0;\n\n    static savePlayerData(): void {\n        let data = {\n            lastScore: this.lastScore,\n            bestScore: this.bestScore,\n            totalCoin: this.totalCoin,\n            numberPlayed: this.numberPlayed,\n        };\n\n        let dataString = JSON.stringify(data);\n        console.log(\"FlipperBall_PlayerData-savePlayerData:\" + dataString);\n        cc.sys.localStorage.setItem(\"FlipperBall_PlayerData\", dataString);\n    }\n\n    static loadPlayerData(callback): void {\n        let dataString = null;\n        dataString = cc.sys.localStorage.getItem(\"FlipperBall_PlayerData\");\n        this.initPlayerData(dataString);\n    }\n\n    static initPlayerData(dataString) {\n        if (dataString != null && dataString != \"{}\" && typeof (dataString) == \"string\" && dataString.length > 0) {\n            console.log(\"FlipperBall_PlayerData-loadPlayerData:\" + dataString);\n            this.parseDataLocal(dataString);\n        } else {\n            console.log(\"FlipperBall_PlayerData-loadPlayerData-NoDataReset\");\n            this.resetPlayerData();\n        }\n    }\n\n    static parseDataLocal(dataString: string): void {\n        let data = JSON.parse(dataString);\n        let lastScore = data.lastScore;\n        if (lastScore != null) {\n            this.lastScore = lastScore;\n        } else {\n            this.lastScore = 0;\n        }\n        let bestScore = data.bestScore;\n        if (bestScore != null) {\n            this.bestScore = bestScore;\n        } else {\n            this.bestScore = 0;\n        }\n        let totalCoin = data.totalCoin;\n        if (totalCoin != null) {\n            this.totalCoin = totalCoin;\n        } else {\n            this.totalCoin = 0;\n        }\n        let numberPlayed = data.numberPlayed;\n        if (numberPlayed != null) {\n            this.numberPlayed = numberPlayed;\n        } else {\n            this.numberPlayed = 0;\n        }\n    }\n\n    static resetPlayerData(): void {\n        this.bestScore = 0;\n        this.numberPlayed = 0;\n        this.totalCoin = 0;\n        this.savePlayerData();\n    }\n\n    static saveScore() {\n        let score = GameState.currentScore;\n        if (score > this.bestScore) {\n            this.setBestScore(score);\n        }\n        this.setLastScore(score);\n    }\n\n    static setLastScore(score: number) {\n        cc.sys.localStorage.setItem('lastScore', score);\n        this.savePlayerData();\n    }\n\n    static getLastScore() {\n        let lastScore = cc.sys.localStorage.getItem('lastScore');\n        if (lastScore) {\n            return lastScore;\n        } else {\n            return 0;\n        }\n    }\n\n    static setBestScore(score: number) {\n        this.bestScore = score;\n        cc.sys.localStorage.setItem('bestScore', score);\n        this.savePlayerData();\n    }\n\n    static getBestScore(): number {\n        return this.bestScore;\n    }\n\n    static addMoreCoin(num): void {\n        let currentCoin = Number(cc.sys.localStorage.getItem('numberTotalCoin')) + num;\n        cc.sys.localStorage.setItem('numberTotalCoin', currentCoin);\n        this.totalCoin = currentCoin;\n        this.savePlayerData();\n    }\n\n    static getTotalCoin(): number {\n        return this.totalCoin;\n    }\n\n    static setTotalTimePlayed(num: number) {\n        this.numberPlayed = Number(cc.sys.localStorage.getItem('numberPlayed')) + num;\n        cc.sys.localStorage.setItem('numberPlayed', this.numberPlayed);\n        this.savePlayerData();\n    }\n\n    static getTotalTimePlayed(): number {\n        return this.numberPlayed;\n    }\n}"]}