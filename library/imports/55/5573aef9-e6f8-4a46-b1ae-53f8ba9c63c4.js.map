{"version":3,"sources":["assets/Scripts/Gameplay/GameManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport EndGamePopup from \"../Popup/EndGamePopup\";\nimport NumberUltilities from \"../Ultilities/NumberUltilities\";\nimport SimplePool from \"../Ultilities/SimplePool\";\nimport BlockScript, {BlockMoveType} from \"./BlockScript\";\nimport PlayerScript from \"./PlayerScript\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class GameManager extends cc.Component\n{\n    public static Instance: GameManager;\n    @property(PlayerScript)\n    public KongiNode: PlayerScript = null;\n    @property\n    public KongiRadius: number = 0;\n\n    @property(cc.Prefab)\n    private BlockPrefab: cc.Prefab = null;\n    @property\n    private MaxBlockQty: number = 10;\n    @property\n    private MaxVelocity: number = 0;\n    @property\n    private MaxFlyingTime: number = 1.2;\n    private Gravity: number = 0;\n    @property\n    public LandingVelocity: number = 500;\n    @property\n    private CanvasWidth: number = 1080;\n\n    protected onLoad(): void\n    {\n        GameManager.Instance = this;\n        this.GenerateColorList(this.MaxBlockQty);\n        this.GenerateScaleList();\n        // THỜI GIAN GIỮA 2 LẦN JUMP LÀ 1.2S (NẾU KO TAP)\n        // => GRAVITY * 0.6 = MaxVelocity\n        this.Gravity = this.MaxVelocity * 2 / this.MaxFlyingTime;\n        this.StartNewGame();\n        this.TapNode.on(cc.Node.EventType.TOUCH_START, this.Landing, this);\n    }\n\n\n\n\n    /**\n     * Đáp xuống đất\n     */\n    private Landing(event: cc.Event.EventTouch): void\n    {\n        this.IsPauseGame = false;\n        this.IsStarted = true;\n        this.KongiNode.Landing();\n    }\n\n\n    @property(EndGamePopup)\n    private endGamePopup: EndGamePopup = null;\n    /**\n     * Rút cọc, GameOver\n     */\n    public ShowGameOver(): void\n    {\n        this.ScoreLabel.string = \"\";\n        for (let i = 0; i < this.BlockList.length; i++)\n        {\n            this.scheduleOnce(() =>\n            {\n                this.BlockList[i].OnGameOver();\n            }, i * 0.05);\n        }\n\n        this.scheduleOnce(() => {this.endGamePopup.ShowEndGamePopup();}, this.BlockList.length * 0.05 + 1);\n    }\n\n    /**\n     * Chuyển sang block tiếp theo (block trước được đáp xuống an toàn)\n     */\n    public SetNextBlock(): void\n    {\n        for (let i = 0; i < this.BlockList.length; i++)\n        {\n            this.BlockList[i].ChangeStateToNextIndex(this.MaxFlyingTime / 3);\n        }\n        this.CurrentBlockIndex--;\n        this.CurrentScore++;\n        this.ScoreLabel.string = this.CurrentScore.toString();\n        this.BlockList.splice(0, 1);\n        this.SpawnBlock();\n        this.BlockList[0].EnableForCollision(true);\n\n\n    }\n\n    public PushUpKongi(pushUpAngle: number): void\n    {\n        this.KongiNode.Jump(pushUpAngle, this.MaxVelocity, this.Gravity);\n    }\n\n\n\n\n    //#region GAMEPLAY\n    @property(cc.Label)\n    private ScoreLabel: cc.Label = null;\n    @property(cc.Node)\n    private TapNode: cc.Node = null;\n    public CurrentScore: number = 0;\n    public IsStarted: boolean = false;\n    public IsPauseGame: boolean = false;\n    public StartNewGame(): void\n    {\n        this.BlockList = [];\n        this.KongiNode.ResetNewGame();\n        this.IsPauseGame = true;\n        this.IsStarted = false;\n        this.CurrentScore = 0;\n        this.CurrentBlockIndex = 0;\n        this.SpawnFirstBlock();\n        for (let i = 0; i < 9; i++)\n        {\n            this.SpawnBlock();\n        }\n        this.ScoreLabel.string = this.CurrentScore.toString();\n        \n\n    }\n    //#endregion GAMEPLAY\n    //#region SPAWN BLOCKS\n    @property(cc.Node)\n    private BlockContainer: cc.Node = null;\n\n    private StepAngle: number = 2.5\n    private MaxAngleMultiplier: number = 10;\n\n    private CurrentSpawnedBlock: BlockScript = null;\n    private CurrentBlockAngle: number;\n    private CurrentBlockWidth: number;\n    private CurrentBlockPosition: cc.Vec3;\n    private CurrentBlockYOffset: number;\n    private CurrentBlockIndex: number = 0;//index của block được thêm vào danh sách, block càng về sau thì phải càng gần với background color\n    private BlockList: BlockScript[] = [];\n\n    private SpawnFirstBlock(): void\n    {\n        this.CurrentSpawnedBlock = SimplePool.instance.Spawn(this.BlockPrefab, this.BlockContainer).getComponent(BlockScript);\n        this.CurrentSpawnedBlock.SetBlockInfo(1080, 0, BlockMoveType.Static, cc.v3(0, -480), this.CurrentBlockIndex, 0); // 480 tùy chỉnh sau\n        this.CurrentSpawnedBlock.EnableForCollision(false)\n        this.CurrentSpawnedBlock.node.parent = this.BlockContainer;\n\n\n        this.CurrentBlockIndex++;\n\n        this.CurrentBlockAngle = NumberUltilities.GetRandomIntNumber(1, this.MaxAngleMultiplier + 1) * NumberUltilities.GetRandomSign() * this.StepAngle;\n        this.CurrentBlockWidth = 800;\n        this.CurrentBlockPosition = cc.v3(0, -360); // 360 tùy chỉnh sau\n        this.CurrentBlockYOffset = -120;\n\n        this.BlockList.push(this.CurrentSpawnedBlock);\n    }\n    /**\n     * Spawn các block (ko phải block đầu tiên)\n     */\n    private SpawnBlock(): void\n    {\n        this.CurrentSpawnedBlock = SimplePool.instance.Spawn(this.BlockPrefab, this.BlockContainer).getComponent(BlockScript);\n        this.CurrentSpawnedBlock.SetBlockInfo(this.CurrentBlockWidth, this.CurrentBlockAngle, BlockMoveType.Static, this.CurrentBlockPosition, this.CurrentBlockIndex, this.CurrentBlockYOffset);\n        this.CurrentSpawnedBlock.node.parent = this.BlockContainer;\n        this.CurrentSpawnedBlock.node.setSiblingIndex(0);\n\n        this.CalculateNextBlockState();\n        this.CurrentBlockIndex++;\n\n        this.BlockList.push(this.CurrentSpawnedBlock);\n    }\n\n\n    private CalculateNextBlockState(): void\n    {\n        let playerVelocityX = -this.MaxVelocity * Math.sin(2 * this.CurrentBlockAngle * Math.PI / 180);\n        let maxFlyingRange = playerVelocityX * this.MaxFlyingTime;\n        let deltaBetweenTwoBlock = maxFlyingRange * NumberUltilities.GetRandomFloatNumber(0.3, 0.7);\n\n        if (this.CurrentBlockIndex < 5)\n        {\n            this.CurrentBlockPosition = cc.v3(cc.misc.clampf(this.CurrentBlockPosition.x + deltaBetweenTwoBlock, -324, 324),\n                this.CurrentBlockPosition.y + 120);\n            this.CurrentBlockYOffset = -120;\n        }\n        else\n        {\n            this.CurrentBlockPosition = cc.v3(cc.misc.clampf(this.CurrentBlockPosition.x + deltaBetweenTwoBlock, -324, 324),\n                this.CurrentBlockPosition.y + 30);\n            this.CurrentBlockYOffset = -30;\n        }\n\n\n        this.CurrentBlockWidth = cc.misc.clampf(Math.abs(maxFlyingRange) * NumberUltilities.GetRandomFloatNumber(0.3, 0.7), 288, 540);\n\n        if (this.CurrentBlockAngle > 0)\n        {\n            if (this.CurrentBlockPosition.x + playerVelocityX * this.MaxFlyingTime < -this.CanvasWidth / 2)\n            {\n                this.CurrentBlockAngle = -NumberUltilities.GetRandomIntNumber(1, this.MaxAngleMultiplier + 1) * this.StepAngle;\n            }\n            else\n            {\n                this.CurrentBlockAngle = NumberUltilities.GetRandomIntNumber(1, this.MaxAngleMultiplier + 1) * this.StepAngle;\n            }\n        }\n        else\n        {\n            if (this.CurrentBlockPosition.x + playerVelocityX * this.MaxFlyingTime > this.CanvasWidth / 2)\n            {\n                this.CurrentBlockAngle = NumberUltilities.GetRandomIntNumber(1, this.MaxAngleMultiplier + 1) * this.StepAngle;\n            }\n            else\n            {\n                this.CurrentBlockAngle = -NumberUltilities.GetRandomIntNumber(1, this.MaxAngleMultiplier + 1) * this.StepAngle;\n            }\n        }\n    }\n    //#endregion SPAWN BLOCKS\n\n\n    //#region MÀU TỪNG ĐOẠN SCORE\n    @property(cc.Color)\n    private BlockColor: cc.Color = null;\n    @property([cc.Color])\n    private levelColorList: cc.Color[] = [];\n    @property([cc.SpriteFrame])\n    private backgroundSpriteFrameList: cc.SpriteFrame[] = [];\n    public ColorList: cc.Color[] = [];\n\n    private GenerateColorList(numberOfColor: number): void\n    {\n        for (let i = 0; i < numberOfColor; i++)\n        {\n            this.ColorList.push(NumberUltilities.GetLerpColor(this.BlockColor, this.levelColorList[0], 1 - Math.pow(2 / 3, i)));\n        }\n    }\n\n    //#endregion MÀU TỪNG ĐOẠN SCORE\n\n    //#region SCALE TỪNG BLOCK THEO INDEX\n    public ScaleList: number[] = [];\n    private DistanceToFirstBlock: number = 19; // khoảng cách từ mắt tới block đầu tiên, với quy ước các block sẽ cách nhau 1 đơn vị\n    private GenerateScaleList()\n    {\n        for (let i = 0; i < this.MaxBlockQty; i++)\n        {\n            this.ScaleList.push(this.DistanceToFirstBlock / (this.DistanceToFirstBlock + i));\n        }\n    }\n\n    //#endregion SCALE TỪNG BLOCK THEO INDEX\n\n}"]}